Feature 2: Groups & Friends Enhancements
1. Group Roles (Owner, Member, Viewer)
Overview:
This feature allows the creation of groups where each group member has different levels of access and control over the group’s expenses and actions. The roles will include:

Owner: Full control over the group. Can add/edit expenses, manage members, set rules, and view all group activities.

Member: Can add and view expenses but cannot manage the group or change group settings.

Viewer: Can only view expenses and group information but cannot add or edit anything.

Core Components:
Group Management: When a user creates a group, they become the Owner.

Role Assignment: Only the owner can assign or change roles for other members. Roles can be "Owner", "Member", or "Viewer".

Permissions: Based on the role, different permissions will be granted:

Owner: Add/edit expenses, manage group settings, and assign roles.

Member: Add/edit their own expenses, but no access to group settings.

Viewer: Read-only access to group expenses and information.

Actions:
Group Creation: A user can create a group and automatically becomes the Owner.

Role Assignment: The owner can assign roles when adding members to the group or later on.

Permissions Control: The app will ensure only owners can modify group settings, while members and viewers have limited access.

Example Use Case:
Owner can add new expenses, manage splitting rules, and view/edit all the group’s expenses.

Member can add new expenses but cannot change the group’s settings.

Viewer can only see the expenses without being able to add or modify anything.

2. Group Chat or Comment Threads Per Expense
Overview:
A group chat or comment system where members can discuss specific expenses, which enhances engagement and coordination within the group.

Core Components:
Expense-Level Comments: Each expense will have its own thread of comments.

Group Chat: Optionally, a general group chat area can be implemented for broader discussions.

Notification System: Users should receive notifications when someone comments on an expense they’re involved in.

Actions:
Comment Threads: Each expense should have an associated comment thread where members can discuss it.

Group Chat: A general chat section can be used to communicate about group matters outside of specific expenses.

Real-Time Updates: When a new comment is added, other users should see it in real-time (using sockets or periodic updates).

Mentioning Members: Users can mention others in comments to get their attention (e.g., @username).

Example Use Case:
A Member adds an expense for groceries, and in the comment section, the group can discuss who paid and how to split it.

A Viewer can read the comments but cannot add new ones.

3. Group Splitting Rules Presets
Overview:
This feature allows users to define common expense-splitting rules for the group. This will help simplify the process of splitting recurring or typical expenses, such as rent or utility bills.

Core Components:
Preset Splitting Rules: A set of pre-defined rules for splitting costs.

Equal Split: Divide the expense evenly between all group members.

Percentage-Based Split: Assign different percentages to each member based on their contribution.

Fixed Amount Split: Each member contributes a fixed amount to the expense.

Recurring Split: Set up recurring expenses like rent or utilities with preset amounts.

One-Pays-All: One member pays the entire amount, and others reimburse them.

Custom Split Rules: Users can define custom rules for each expense.

Actions:
Assign Split Type to Each Expense: When adding an expense, the user can select one of the preset split rules or create a custom one.

Reimbursement Tracking: Track who owes what to whom if the "One-Pays-All" or "Fixed Amount Split" rule is used.

Automatic Calculation: The app should automatically calculate and update the amounts for each member based on the splitting rule.

Example Use Case:
Recurring Expenses: Rent is set to be divided equally among three members every month. The app remembers this and automatically calculates the amount each member owes.

One-Pays-All: One person pays for the group’s internet, and the others will reimburse them based on the rule.

Technical Outline and Flow:
Group Creation:

User creates a group → They are automatically the Owner.

The owner can add members with predefined roles (Owner, Member, Viewer).

Expense Management:

Expense added by a Member or Owner → Member/Owner assigns a splitting rule (e.g., equal split, percentage-based, etc.).

Comments and chat threads are created for each expense for further discussion.

Role-based Permissions:

Only the Owner can change group settings or assign roles.

Members can add and manage their expenses.

Viewers have read-only access.

Reimbursement & Payments:

If a user has paid for an expense, the system tracks who owes what based on the splitting rules.

System can generate a "settlement" statement, showing who owes whom.

Implementation Steps:
Create the Group Model:

Group name, members, roles, and permissions.

Create the Expense Model:

Expense name, amount, group, splitting rules, and comments.

Implement Role Management:

Assign roles to users within each group.

Implement Comment/Chat System:

Store comments for each expense and group-wide chat functionality.

Add Split Rules Logic:

Implement different splitting options and automatic calculations for each expense.

Notifications:

Set up a notification system for when new comments or actions occur.

User Stories:
As an owner, I want to assign roles (Owner, Member, Viewer) to other users in the group, so that I can control who has access to add/edit expenses.

As a member, I want to add my expenses and comment on group expenses, so that I can share my contributions and engage with other members.

As a viewer, I want to see the group's expenses and comments, but I don't want to make any changes to the group or expenses.

As a member, I want to use predefined expense splitting rules (e.g., equal split, percentage-based) for group expenses, so that I don’t need to calculate how to split every expense.

As a member, I want to be notified when someone comments on an expense I am involved in, so that I can stay updated on group discussions.